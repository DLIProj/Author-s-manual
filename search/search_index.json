{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome # Welcome to docs.peachpie.io , the home of the PeachPie documentation for developers. Check out the get started section to jump straight to using PeachPie, or dive into the more advanced topics, such as the .NET reference and API reference . Migrate PHP code to .NET Core The very first step is to get your PHP code running on .NET. Follow the get started and the PHP guide overview topics to create a project and build it as a .NET library. This should give you an overview of using the MSBuild project file , migration tips, the compatibility status and introduce you to working with the project in Visual Studio or Visual Studio Code. .NET interoperability reference In order to benefit from PHP code built as a .NET library, take a look at how to connect a C# project with a PHP project. The section .NET reference provides a documentation on how to pass variables or objects, call methods, share session data, instantiate classes, extend classes etc. between C# and PHP. API reference The project provides a lot of internals that can be used to drive the PHP code life cycle or to implement your own high-performance extensions in .NET. Follow the API reference for more information. Samples, Tutorials, Scenarios See our scenarios for real world use cases, specific code samples and hints on how you can benefit from the project. If you want to understand the objectives and benefits of PeachPie, browse the about section, where you can find the motivation behind this project.","title":"Welcome"},{"location":"#welcome","text":"Welcome to docs.peachpie.io , the home of the PeachPie documentation for developers. Check out the get started section to jump straight to using PeachPie, or dive into the more advanced topics, such as the .NET reference and API reference . Migrate PHP code to .NET Core The very first step is to get your PHP code running on .NET. Follow the get started and the PHP guide overview topics to create a project and build it as a .NET library. This should give you an overview of using the MSBuild project file , migration tips, the compatibility status and introduce you to working with the project in Visual Studio or Visual Studio Code. .NET interoperability reference In order to benefit from PHP code built as a .NET library, take a look at how to connect a C# project with a PHP project. The section .NET reference provides a documentation on how to pass variables or objects, call methods, share session data, instantiate classes, extend classes etc. between C# and PHP. API reference The project provides a lot of internals that can be used to drive the PHP code life cycle or to implement your own high-performance extensions in .NET. Follow the API reference for more information. Samples, Tutorials, Scenarios See our scenarios for real world use cases, specific code samples and hints on how you can benefit from the project. If you want to understand the objectives and benefits of PeachPie, browse the about section, where you can find the motivation behind this project.","title":"Welcome"},{"location":"get-started/","text":"Get started # The purpose of this page is to get you started with PeachPie quickly. The following steps let you to create a minimalistic project containing PHP files and then compile and run them on top of .NET Core. Prerequisites # .NET Core SDK 3.0 or newer: microsoft.com/net/download Install dotnet templates # Open a command prompt and run the following command: install dotnet templates dotnet new -i \"Peachpie.Templates::*\" The dotnet command downloads the latest project template to be used to create new PeachPie projects for you. Create your app # The following steps create a new project in the current directory. They come with a simple hello world code. Console Application # The easiest way to start is to create a console application with PHP code. Open the command prompt and run the following commands: create and run console project dotnet new console -lang PHP dotnet run The first run takes a few seconds, since it will download all the dependencies for the first time and compile the project. Web Application # The second option is to create an ASP.NET Core application that runs a website with compiled PHP. Open the command prompt in a new directory and run the following commands: create and run web project dotnet new web -lang PHP dotnet run -p Server The dotnet new command creates a new project and downloads all the necessary dependencies. The application then compiles and runs a built-in web server on http://localhost:5004 . You can access the page in the browser and see the result of index.php . The newly created web application actually consists of two projects - Server and Website . The first one is a C# .NET Core app that initializes the web server and passes requests to scripts in the second project. You can integrate this solution with a regular .NET Core MVC application with your additional configuration. Class Library # The third project type is a class library. The following command creates a project that builds a .dll file out of your PHP files to be used as a library that can be referenced by other projects - either C# or other PHP projects. create and build class library project dotnet new classlib -lang PHP dotnet build This kind of project can be used purely as a dependency to other projects. The contained classes and interfaces are exposed as regular .NET types. The included script files and global functions are also accessible, either by the PeachPie API or seamlessly within another PHP project that references this library. Development Environment # Projects can be created and opened by .NET development environments, such as Visual Studio or Visual Studio Code . Visual Studio # Install our PeachPie Visual Studio Extension . Go to File | New | Project , locate the PHP (PeachPie) template group and create a new project. Hit F5 . Visual Studio Code # Install PeachPie for VS Code extension. Open the folder with your PHP project. Start the project by pressing F5 and let VSCode create the initial tasks.json and launch.json files for .NET Core. Edit launch.json to point to the actual build result. The steps above add support for PeachPie diagnostics and breakpoints in PHP code within a PHP project in VS Code. The building and debugging of the application is handled by the .NET runtime and debugger.","title":"Get started"},{"location":"get-started/#get-started","text":"The purpose of this page is to get you started with PeachPie quickly. The following steps let you to create a minimalistic project containing PHP files and then compile and run them on top of .NET Core.","title":"Get started"},{"location":"get-started/#prerequisites","text":".NET Core SDK 3.0 or newer: microsoft.com/net/download","title":"Prerequisites"},{"location":"get-started/#install-dotnet-templates","text":"Open a command prompt and run the following command: install dotnet templates dotnet new -i \"Peachpie.Templates::*\" The dotnet command downloads the latest project template to be used to create new PeachPie projects for you.","title":"Install dotnet templates"},{"location":"get-started/#create-your-app","text":"The following steps create a new project in the current directory. They come with a simple hello world code.","title":"Create your app"},{"location":"get-started/#console-application","text":"The easiest way to start is to create a console application with PHP code. Open the command prompt and run the following commands: create and run console project dotnet new console -lang PHP dotnet run The first run takes a few seconds, since it will download all the dependencies for the first time and compile the project.","title":"Console Application"},{"location":"get-started/#web-application","text":"The second option is to create an ASP.NET Core application that runs a website with compiled PHP. Open the command prompt in a new directory and run the following commands: create and run web project dotnet new web -lang PHP dotnet run -p Server The dotnet new command creates a new project and downloads all the necessary dependencies. The application then compiles and runs a built-in web server on http://localhost:5004 . You can access the page in the browser and see the result of index.php . The newly created web application actually consists of two projects - Server and Website . The first one is a C# .NET Core app that initializes the web server and passes requests to scripts in the second project. You can integrate this solution with a regular .NET Core MVC application with your additional configuration.","title":"Web Application"},{"location":"get-started/#class-library","text":"The third project type is a class library. The following command creates a project that builds a .dll file out of your PHP files to be used as a library that can be referenced by other projects - either C# or other PHP projects. create and build class library project dotnet new classlib -lang PHP dotnet build This kind of project can be used purely as a dependency to other projects. The contained classes and interfaces are exposed as regular .NET types. The included script files and global functions are also accessible, either by the PeachPie API or seamlessly within another PHP project that references this library.","title":"Class Library"},{"location":"get-started/#development-environment","text":"Projects can be created and opened by .NET development environments, such as Visual Studio or Visual Studio Code .","title":"Development Environment"},{"location":"get-started/#visual-studio","text":"Install our PeachPie Visual Studio Extension . Go to File | New | Project , locate the PHP (PeachPie) template group and create a new project. Hit F5 .","title":"Visual Studio"},{"location":"get-started/#visual-studio-code","text":"Install PeachPie for VS Code extension. Open the folder with your PHP project. Start the project by pressing F5 and let VSCode create the initial tasks.json and launch.json files for .NET Core. Edit launch.json to point to the actual build result. The steps above add support for PeachPie diagnostics and breakpoints in PHP code within a PHP project in VS Code. The building and debugging of the application is handled by the .NET runtime and debugger.","title":"Visual Studio Code"},{"location":"antora/","text":"Install # Include https://gitlab.com/antora/antora/-/issues/596 Antora process # Convert docx to html pandoc -f docx -t html -s -o PMM.html PMM.docx Clean html Convert html to md pandoc -s -r html pmm.html -o pmm.md Convert md to ascii Webpage to docx pandoc --reference-doc pandocTheme.docx -f html -t docx -o HugiOmg.docx http://127.0.0.1:5000/ess/performance-management/index.html#_plan_assignment wkhtmltopdf http://127.0.0.1:4000/docs/CSharpCodingStandards.html google.pdf Conversion # pip3 uninstall mkpdfs-mkdocs Serve # Install npm i -g http-server yarn global add http-server npm i -g @asciidoctor/core asciidoctor-pdf npm run clean-install and then npm run build gem install asciidoctor Misc # npm i -g @asciidoctor/core asciidoctor-pdf npm run clean-install and then npm run build","title":"Install"},{"location":"antora/#install","text":"Include https://gitlab.com/antora/antora/-/issues/596","title":"Install"},{"location":"antora/#antora-process","text":"Convert docx to html pandoc -f docx -t html -s -o PMM.html PMM.docx Clean html Convert html to md pandoc -s -r html pmm.html -o pmm.md Convert md to ascii Webpage to docx pandoc --reference-doc pandocTheme.docx -f html -t docx -o HugiOmg.docx http://127.0.0.1:5000/ess/performance-management/index.html#_plan_assignment wkhtmltopdf http://127.0.0.1:4000/docs/CSharpCodingStandards.html google.pdf","title":"Antora process"},{"location":"antora/#conversion","text":"pip3 uninstall mkpdfs-mkdocs","title":"Conversion"},{"location":"antora/#serve","text":"Install npm i -g http-server yarn global add http-server npm i -g @asciidoctor/core asciidoctor-pdf npm run clean-install and then npm run build gem install asciidoctor","title":"Serve"},{"location":"antora/#misc","text":"npm i -g @asciidoctor/core asciidoctor-pdf npm run clean-install and then npm run build","title":"Misc"},{"location":"antora/authoring/","text":"Authoring # Antora authring guidelines Antora process # Do conversion (HTML/DocX/Markdown) Clean html Convert html to md Convert md to ascii Antora commands # Antora fetch # antora antora - playbook . yml antora -- fetch antora - playbook . yml antora -- fetch author - mode . yml Antora fetch local lunr # aantora-playbook.yml # set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr antora - playbook . yml author-mode.yml # set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr author - mode . yml local-playbook.yml # set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr local - playbook . yml Install local serve # Install server 1 2 3 4 5 npm i - g http - server OR yarn global add http - server Serve # 1 2 3 http - server build / site - c - 1 http - server build / site - c - 1 - p 5000 - c - 1 flag to disable caching http - server build / site - c - 1 - p 5000 DDOCSEARCH_ENABLED = true DOCSEARCH_ENGINE = lunr antora site . yml Formatting # [ % autowidth ] |=== | A | B | C |=== Include # https://gitlab.com/antora/antora/-/issues/596 Mindfulness # https://www.youtube.com/watch?v=7-bPYMAdnnM https://www.youtube.com/watch?v=h-CYAQqpvcw Doctype book level 0 error # = Book Title : chapter : 12 : sectnums : : sectnumoffset : 11 ( chapter minus 1 ) : leveloffset : 1","title":"Authoring"},{"location":"antora/authoring/#authoring","text":"Antora authring guidelines","title":"Authoring"},{"location":"antora/authoring/#antora-process","text":"Do conversion (HTML/DocX/Markdown) Clean html Convert html to md Convert md to ascii","title":"Antora process"},{"location":"antora/authoring/#antora-commands","text":"","title":"Antora commands"},{"location":"antora/authoring/#antora-fetch","text":"antora antora - playbook . yml antora -- fetch antora - playbook . yml antora -- fetch author - mode . yml","title":"Antora fetch"},{"location":"antora/authoring/#antora-fetch-local-lunr","text":"","title":"Antora fetch local lunr"},{"location":"antora/authoring/#aantora-playbookyml","text":"set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr antora - playbook . yml","title":"aantora-playbook.yml"},{"location":"antora/authoring/#author-modeyml","text":"set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr author - mode . yml","title":"author-mode.yml"},{"location":"antora/authoring/#local-playbookyml","text":"set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr local - playbook . yml","title":"local-playbook.yml"},{"location":"antora/authoring/#install-local-serve","text":"Install server 1 2 3 4 5 npm i - g http - server OR yarn global add http - server","title":"Install local serve"},{"location":"antora/authoring/#serve","text":"1 2 3 http - server build / site - c - 1 http - server build / site - c - 1 - p 5000 - c - 1 flag to disable caching http - server build / site - c - 1 - p 5000 DDOCSEARCH_ENABLED = true DOCSEARCH_ENGINE = lunr antora site . yml","title":"Serve"},{"location":"antora/authoring/#formatting","text":"[ % autowidth ] |=== | A | B | C |===","title":"Formatting"},{"location":"antora/authoring/#include","text":"https://gitlab.com/antora/antora/-/issues/596","title":"Include"},{"location":"antora/authoring/#mindfulness","text":"https://www.youtube.com/watch?v=7-bPYMAdnnM https://www.youtube.com/watch?v=h-CYAQqpvcw","title":"Mindfulness"},{"location":"antora/authoring/#doctype-book-level-0-error","text":"= Book Title : chapter : 12 : sectnums : : sectnumoffset : 11 ( chapter minus 1 ) : leveloffset : 1","title":"Doctype book level 0 error"},{"location":"antora/conversion/","text":"Conversion # Docx to Markdown # Docx to Markdown with images pandoc - o SalaryRegister . md -- extract - media =./ SalaryRegister . docx HTML to Docx # pandoc -- reference - doc pandocTheme . docx - f html - t docx - o DailyTS . docx https : // site / wagetype - based - timesheet / HTML to Markdown # pandoc -s -r html pmm.html -o pmm.md HTML to ASCIIDOC # pandoc - f html - t asciidoctor - o PRL_PayrollSheet00 . adoc PRL_PayrollSheet00 . html wkhtmltopdf # wkhtmltopdf http : // 127.0.0.1 : 4000 / docs / CSharpCodingStandards . html google . pdf Weasyprint # python - m weasyprint http : // weasyprint . org weasyprint . pdf","title":"Conversion"},{"location":"antora/conversion/#conversion","text":"","title":"Conversion"},{"location":"antora/conversion/#docx-to-markdown","text":"Docx to Markdown with images pandoc - o SalaryRegister . md -- extract - media =./ SalaryRegister . docx","title":"Docx to Markdown"},{"location":"antora/conversion/#html-to-docx","text":"pandoc -- reference - doc pandocTheme . docx - f html - t docx - o DailyTS . docx https : // site / wagetype - based - timesheet /","title":"HTML to Docx"},{"location":"antora/conversion/#html-to-markdown","text":"pandoc -s -r html pmm.html -o pmm.md","title":"HTML to Markdown"},{"location":"antora/conversion/#html-to-asciidoc","text":"pandoc - f html - t asciidoctor - o PRL_PayrollSheet00 . adoc PRL_PayrollSheet00 . html","title":"HTML to ASCIIDOC"},{"location":"antora/conversion/#wkhtmltopdf","text":"wkhtmltopdf http : // 127.0.0.1 : 4000 / docs / CSharpCodingStandards . html google . pdf","title":"wkhtmltopdf"},{"location":"antora/conversion/#weasyprint","text":"python - m weasyprint http : // weasyprint . org weasyprint . pdf","title":"Weasyprint"},{"location":"mkdocs/","text":"Install # Clone the repository # TBD Install # python - m pip install -- upgrade pip pip install pymdown - extensions pip install mkdocs pip install mkdocs - awesome - pages - plugin pip install mkdocs - material == 5.0.1 Serve command # mkdocs serve Build command # mkdocs build -- clean Publish to Github # mkdocs gh - deploy -- force","title":"Install"},{"location":"mkdocs/#install","text":"","title":"Install"},{"location":"mkdocs/#clone-the-repository","text":"TBD","title":"Clone the repository"},{"location":"mkdocs/#install_1","text":"python - m pip install -- upgrade pip pip install pymdown - extensions pip install mkdocs pip install mkdocs - awesome - pages - plugin pip install mkdocs - material == 5.0.1","title":"Install"},{"location":"mkdocs/#serve-command","text":"mkdocs serve","title":"Serve command"},{"location":"mkdocs/#build-command","text":"mkdocs build -- clean","title":"Build command"},{"location":"mkdocs/#publish-to-github","text":"mkdocs gh - deploy -- force","title":"Publish to Github"},{"location":"mkdocs/authoring/","text":"Authoring # Antora authring guidelines Antora process # Do conversion (HTML/DocX/Markdown) Clean html Convert html to md Convert md to ascii Antora commands # Antora fetch # antora antora - playbook . yml antora -- fetch antora - playbook . yml antora -- fetch author - mode . yml Antora fetch local lunr # aantora-playbook.yml # set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr antora - playbook . yml author-mode.yml # set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr author - mode . yml local-playbook.yml # set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr local - playbook . yml Install local serve # Install server 1 2 3 4 5 npm i - g http - server OR yarn global add http - server Serve # 1 2 3 http - server build / site - c - 1 http - server build / site - c - 1 - p 5000 - c - 1 flag to disable caching http - server build / site - c - 1 - p 5000 DDOCSEARCH_ENABLED = true DOCSEARCH_ENGINE = lunr antora site . yml Formatting # [ % autowidth ] |=== | A | B | C |=== Include # https://gitlab.com/antora/antora/-/issues/596 Mindfulness # https://www.youtube.com/watch?v=7-bPYMAdnnM https://www.youtube.com/watch?v=h-CYAQqpvcw Doctype book level 0 error # = Book Title : chapter : 12 : sectnums : : sectnumoffset : 11 ( chapter minus 1 ) : leveloffset : 1","title":"Authoring"},{"location":"mkdocs/authoring/#authoring","text":"Antora authring guidelines","title":"Authoring"},{"location":"mkdocs/authoring/#antora-process","text":"Do conversion (HTML/DocX/Markdown) Clean html Convert html to md Convert md to ascii","title":"Antora process"},{"location":"mkdocs/authoring/#antora-commands","text":"","title":"Antora commands"},{"location":"mkdocs/authoring/#antora-fetch","text":"antora antora - playbook . yml antora -- fetch antora - playbook . yml antora -- fetch author - mode . yml","title":"Antora fetch"},{"location":"mkdocs/authoring/#antora-fetch-local-lunr","text":"","title":"Antora fetch local lunr"},{"location":"mkdocs/authoring/#aantora-playbookyml","text":"set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr antora - playbook . yml","title":"aantora-playbook.yml"},{"location":"mkdocs/authoring/#author-modeyml","text":"set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr author - mode . yml","title":"author-mode.yml"},{"location":"mkdocs/authoring/#local-playbookyml","text":"set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr local - playbook . yml","title":"local-playbook.yml"},{"location":"mkdocs/authoring/#install-local-serve","text":"Install server 1 2 3 4 5 npm i - g http - server OR yarn global add http - server","title":"Install local serve"},{"location":"mkdocs/authoring/#serve","text":"1 2 3 http - server build / site - c - 1 http - server build / site - c - 1 - p 5000 - c - 1 flag to disable caching http - server build / site - c - 1 - p 5000 DDOCSEARCH_ENABLED = true DOCSEARCH_ENGINE = lunr antora site . yml","title":"Serve"},{"location":"mkdocs/authoring/#formatting","text":"[ % autowidth ] |=== | A | B | C |===","title":"Formatting"},{"location":"mkdocs/authoring/#include","text":"https://gitlab.com/antora/antora/-/issues/596","title":"Include"},{"location":"mkdocs/authoring/#mindfulness","text":"https://www.youtube.com/watch?v=7-bPYMAdnnM https://www.youtube.com/watch?v=h-CYAQqpvcw","title":"Mindfulness"},{"location":"mkdocs/authoring/#doctype-book-level-0-error","text":"= Book Title : chapter : 12 : sectnums : : sectnumoffset : 11 ( chapter minus 1 ) : leveloffset : 1","title":"Doctype book level 0 error"},{"location":"mkdocs/conversion/","text":"Conversion # Docx to Markdown # Docx to Markdown with images pandoc - o SalaryRegister . md -- extract - media =./ SalaryRegister . docx HTML to Docx # pandoc -- reference - doc pandocTheme . docx - f html - t docx - o DailyTS . docx https : // site / wagetype - based - timesheet / HTML to Markdown # pandoc -s -r html pmm.html -o pmm.md HTML to ASCIIDOC # pandoc - f html - t asciidoctor - o PRL_PayrollSheet00 . adoc PRL_PayrollSheet00 . html wkhtmltopdf # wkhtmltopdf http : // 127.0.0.1 : 4000 / docs / CSharpCodingStandards . html google . pdf Weasyprint # python - m weasyprint http : // weasyprint . org weasyprint . pdf","title":"Conversion"},{"location":"mkdocs/conversion/#conversion","text":"","title":"Conversion"},{"location":"mkdocs/conversion/#docx-to-markdown","text":"Docx to Markdown with images pandoc - o SalaryRegister . md -- extract - media =./ SalaryRegister . docx","title":"Docx to Markdown"},{"location":"mkdocs/conversion/#html-to-docx","text":"pandoc -- reference - doc pandocTheme . docx - f html - t docx - o DailyTS . docx https : // site / wagetype - based - timesheet /","title":"HTML to Docx"},{"location":"mkdocs/conversion/#html-to-markdown","text":"pandoc -s -r html pmm.html -o pmm.md","title":"HTML to Markdown"},{"location":"mkdocs/conversion/#html-to-asciidoc","text":"pandoc - f html - t asciidoctor - o PRL_PayrollSheet00 . adoc PRL_PayrollSheet00 . html","title":"HTML to ASCIIDOC"},{"location":"mkdocs/conversion/#wkhtmltopdf","text":"wkhtmltopdf http : // 127.0.0.1 : 4000 / docs / CSharpCodingStandards . html google . pdf","title":"wkhtmltopdf"},{"location":"mkdocs/conversion/#weasyprint","text":"python - m weasyprint http : // weasyprint . org weasyprint . pdf","title":"Weasyprint"}]}