{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 This doc site contains authoring guides that help DLI technical writers to create articles, learning materials, and other documentation.","title":"Welcome"},{"location":"#welcome","text":"This doc site contains authoring guides that help DLI technical writers to create articles, learning materials, and other documentation.","title":"Welcome"},{"location":"antora/","text":"Install \u00b6 Refer to the Antora Installation guide Antora Lunr \u00b6 Refer to the Antora Lunr guide Install http server \u00b6 npm i - g http - server OR yarn global add http - server asciidoctor pdf \u00b6 npm i - g @asciidoctor / core asciidoctor - pdf NPM clean install \u00b6 npm run clean - install npm run build","title":"Install"},{"location":"antora/#install","text":"Refer to the Antora Installation guide","title":"Install"},{"location":"antora/#antora-lunr","text":"Refer to the Antora Lunr guide","title":"Antora Lunr"},{"location":"antora/#install-http-server","text":"npm i - g http - server OR yarn global add http - server","title":"Install http server"},{"location":"antora/#asciidoctor-pdf","text":"npm i - g @asciidoctor / core asciidoctor - pdf","title":"asciidoctor pdf"},{"location":"antora/#npm-clean-install","text":"npm run clean - install npm run build","title":"NPM clean install"},{"location":"antora/authoring/","text":"Authoring \u00b6 Antora commands \u00b6 Antora fetch \u00b6 antora antora - playbook . yml antora -- fetch antora - playbook . yml antora -- fetch local - playbook . yml antora local - playbook . yml Antora fetch local lunr \u00b6 1 2 3 4 5 antora - playbook . yml set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr antora - playbook . yml local - playbook . yml set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr local - playbook . yml Serve \u00b6 1 2 3 http-server build/site -c-1 http-server build/site -c-1 -p 5000 -c-1 flag to disable caching http-server build/site -c-1 -p 5000 DDOCSEARCH_ENABLED=true DOCSEARCH_ENGINE=lunr antora site.yml Formatting \u00b6 [%autowidth] |=== | A | B | C |=== Include \u00b6 Include partials include: : version @component : module : partial$name - of - file . adoc [ optional attributes ] Include from examples folder ++++ include: : example$process - overview - table . html [] ++++ include: : version @component : module : example$name - of - file . ext [ optional attributes ] Support non-AsciiDoc content pages (such as HTML) Doctype book level 0 error \u00b6 = Book Title : chapter : 12 : sectnums : : sectnumoffset : 11 ( chapter minus 1 ) : leveloffset : 1 Source code \u00b6 [ source , java ] ---- include: : example$HelloWorld . java [] ---- [ source , java ] ---- include: : ROOT : example$output / query - max . json [] ---- [ source ] ---- # Insert logic here ---- Admonitions \u00b6 [ IMPORTANT ] . Optional Title ==== Use an example block to create an admonition that contains complex content , such as ( but not limited to ): * Lists * Multiple paragraphs * Source code * Images ==== [ NOTE . think , caption = RESULTS ] ==== * The following validation messages appear if any of the corresponding validation issues exist . ** Please Add Employees ==== Tables with headers \u00b6 [ width = \"90%\" , cols = \"30,60\" , options = \"header\" ] |=== | Countries | Capital | India | New Delhi | USA | Washington , D . C . |=== [ width = \"90%\" , cols = \"30,60\" ] |=== | Countries | Capital | India | New Delhi | USA | Washington , D . C . |=== == Table cell span . Cell spans columns |=== | Name | Description | Asciidoctor | Awesome way to write documentation // This cell spans 2 columns, indicated // by the number before the + sign. // The + sign // tells Asciidoctor to span this // cell over multiple columns. 2 +| The statements above say it all |=== . Cell spans rows |=== | Name | Description // This cell spans 2 rows, // because the number after // the dot (.) specifies the number // of rows to span. The + sign // tells Asciidoctor to span this // cell over multiple rows. .2 +| Asciidoctor | Awesome way to write documentation | Works on the JVM |=== . Cell spans both rows and columns |=== | Col1 | Col2 | Col 3 // We can combine the numbers for // row and column span within one // cell specifier. // The number before the dot (.) // is the number of columns to span, // the number after the dot (.) // is the number of rows to span. 2.2 +| Cell spans 2 cols , 2 rows | Row 1 , Col 3 | Row 2 , Col 3 |=== Refer to Span/ Merge Cell over Rows and Columns for more details Links \u00b6 https: //asciidoctor.org[Asciidoctor,window=_blank] https: //asciidoctor.org[Asciidoctor] List continuation \u00b6 . Step1 . + * Bullet list Item 1 * Bullet list Item 1 + This is Step2 . + image: ess - install - image3 . png [] + This is Line2 of Step2 . . This is Step3 . ## Glossary [ glossary ] mud: : wet , cold dirt rain: : water falling from the sky","title":"Authoring"},{"location":"antora/authoring/#authoring","text":"","title":"Authoring"},{"location":"antora/authoring/#antora-commands","text":"","title":"Antora commands"},{"location":"antora/authoring/#antora-fetch","text":"antora antora - playbook . yml antora -- fetch antora - playbook . yml antora -- fetch local - playbook . yml antora local - playbook . yml","title":"Antora fetch"},{"location":"antora/authoring/#antora-fetch-local-lunr","text":"1 2 3 4 5 antora - playbook . yml set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr antora - playbook . yml local - playbook . yml set \"DOCSEARCH_ENABLED=true\" && set \"DOCSEARCH_ENGINE=lunr\" && antora -- generator antora - site - generator - lunr local - playbook . yml","title":"Antora fetch local lunr"},{"location":"antora/authoring/#serve","text":"1 2 3 http-server build/site -c-1 http-server build/site -c-1 -p 5000 -c-1 flag to disable caching http-server build/site -c-1 -p 5000 DDOCSEARCH_ENABLED=true DOCSEARCH_ENGINE=lunr antora site.yml","title":"Serve"},{"location":"antora/authoring/#formatting","text":"[%autowidth] |=== | A | B | C |===","title":"Formatting"},{"location":"antora/authoring/#include","text":"Include partials include: : version @component : module : partial$name - of - file . adoc [ optional attributes ] Include from examples folder ++++ include: : example$process - overview - table . html [] ++++ include: : version @component : module : example$name - of - file . ext [ optional attributes ] Support non-AsciiDoc content pages (such as HTML)","title":"Include"},{"location":"antora/authoring/#doctype-book-level-0-error","text":"= Book Title : chapter : 12 : sectnums : : sectnumoffset : 11 ( chapter minus 1 ) : leveloffset : 1","title":"Doctype book level 0 error"},{"location":"antora/authoring/#source-code","text":"[ source , java ] ---- include: : example$HelloWorld . java [] ---- [ source , java ] ---- include: : ROOT : example$output / query - max . json [] ---- [ source ] ---- # Insert logic here ----","title":"Source code"},{"location":"antora/authoring/#admonitions","text":"[ IMPORTANT ] . Optional Title ==== Use an example block to create an admonition that contains complex content , such as ( but not limited to ): * Lists * Multiple paragraphs * Source code * Images ==== [ NOTE . think , caption = RESULTS ] ==== * The following validation messages appear if any of the corresponding validation issues exist . ** Please Add Employees ====","title":"Admonitions"},{"location":"antora/authoring/#tables-with-headers","text":"[ width = \"90%\" , cols = \"30,60\" , options = \"header\" ] |=== | Countries | Capital | India | New Delhi | USA | Washington , D . C . |=== [ width = \"90%\" , cols = \"30,60\" ] |=== | Countries | Capital | India | New Delhi | USA | Washington , D . C . |=== == Table cell span . Cell spans columns |=== | Name | Description | Asciidoctor | Awesome way to write documentation // This cell spans 2 columns, indicated // by the number before the + sign. // The + sign // tells Asciidoctor to span this // cell over multiple columns. 2 +| The statements above say it all |=== . Cell spans rows |=== | Name | Description // This cell spans 2 rows, // because the number after // the dot (.) specifies the number // of rows to span. The + sign // tells Asciidoctor to span this // cell over multiple rows. .2 +| Asciidoctor | Awesome way to write documentation | Works on the JVM |=== . Cell spans both rows and columns |=== | Col1 | Col2 | Col 3 // We can combine the numbers for // row and column span within one // cell specifier. // The number before the dot (.) // is the number of columns to span, // the number after the dot (.) // is the number of rows to span. 2.2 +| Cell spans 2 cols , 2 rows | Row 1 , Col 3 | Row 2 , Col 3 |=== Refer to Span/ Merge Cell over Rows and Columns for more details","title":"Tables with headers"},{"location":"antora/authoring/#links","text":"https: //asciidoctor.org[Asciidoctor,window=_blank] https: //asciidoctor.org[Asciidoctor]","title":"Links"},{"location":"antora/authoring/#list-continuation","text":". Step1 . + * Bullet list Item 1 * Bullet list Item 1 + This is Step2 . + image: ess - install - image3 . png [] + This is Line2 of Step2 . . This is Step3 . ## Glossary [ glossary ] mud: : wet , cold dirt rain: : water falling from the sky","title":"List continuation"},{"location":"antora/content-reuse/","text":"Reuse content \u00b6 Excrept from the discussion thread: https://antora.zulipchat.com/#narrow/stream/282400-users/topic/.E2.9C.94.20Content.20reusabilty.2F.20Conditional.20logic Use conditionals (i.e., preprocessor conditionals) as a potential approach. See https://docs.asciidoctor.org/asciidoc/latest/directives/conditionals/ For your usecase, you might have an attribute called myClient . You could use a conditional within your markup like: ifeval ::[ \" {myClient} \" == \"someBigCustomer\" ] This feature is particularly useful for { myClient } users ... endif ::[] When you generate your documentation with Antora, you can set the --attribute myClient=someBigCustomer to create HTML suitable for that client. Attribute names should always be lowercase Recently, I was working on a conditional flow, and I dearly wished for an ifelse::[] macro. It's easy to use ifeval for additional case-specific content, but it is notably harder to manage alternative content. Especially when you have several exceptions and a default to express. I didn't find an ifelse issue... is this something you've seen requested previously? Re : I'm pretty sure there is an open issue about it. I tried to implemented it once, but it turned out to be more complicated than anticipated. By I was a younger lad then ;) https://github.com/asciidoctor/asciidoctor/issues/514 I also have an idea that could cover the most common use case for ifeval. Something like: ifdef:attribute-name[expected-value] Example \u00b6 ifeval::[\"{myclient}\" == \"\"] *Step 1*: User logs into ESS and #opens *DLI account*#. endif::[] ifeval::[\"{myclient}\" == \"HLB\"] *Step 1*: User logs into ESS and #opens *DLI account* and clicks *Go*#. endif::[] ifeval::[\"{myclient}\" == \"DAS\"] *Step 1*: User logs into ESS and #opens *{myclient} account*#. endif::[] *Step 2*: User goes to *Time Management* Module. *Step 3*: User selects *Employee Timesheet*, make changes if required and then saves the changes. *Step 4*: User logs out from ESS.","title":"Reuse content"},{"location":"antora/content-reuse/#reuse-content","text":"Excrept from the discussion thread: https://antora.zulipchat.com/#narrow/stream/282400-users/topic/.E2.9C.94.20Content.20reusabilty.2F.20Conditional.20logic Use conditionals (i.e., preprocessor conditionals) as a potential approach. See https://docs.asciidoctor.org/asciidoc/latest/directives/conditionals/ For your usecase, you might have an attribute called myClient . You could use a conditional within your markup like: ifeval ::[ \" {myClient} \" == \"someBigCustomer\" ] This feature is particularly useful for { myClient } users ... endif ::[] When you generate your documentation with Antora, you can set the --attribute myClient=someBigCustomer to create HTML suitable for that client. Attribute names should always be lowercase Recently, I was working on a conditional flow, and I dearly wished for an ifelse::[] macro. It's easy to use ifeval for additional case-specific content, but it is notably harder to manage alternative content. Especially when you have several exceptions and a default to express. I didn't find an ifelse issue... is this something you've seen requested previously? Re : I'm pretty sure there is an open issue about it. I tried to implemented it once, but it turned out to be more complicated than anticipated. By I was a younger lad then ;) https://github.com/asciidoctor/asciidoctor/issues/514 I also have an idea that could cover the most common use case for ifeval. Something like: ifdef:attribute-name[expected-value]","title":"Reuse content"},{"location":"antora/content-reuse/#example","text":"ifeval::[\"{myclient}\" == \"\"] *Step 1*: User logs into ESS and #opens *DLI account*#. endif::[] ifeval::[\"{myclient}\" == \"HLB\"] *Step 1*: User logs into ESS and #opens *DLI account* and clicks *Go*#. endif::[] ifeval::[\"{myclient}\" == \"DAS\"] *Step 1*: User logs into ESS and #opens *{myclient} account*#. endif::[] *Step 2*: User goes to *Time Management* Module. *Step 3*: User selects *Employee Timesheet*, make changes if required and then saves the changes. *Step 4*: User logs out from ESS.","title":"Example"},{"location":"antora/conversion/","text":"Conversion \u00b6 Docx to Markdown \u00b6 Docx to Markdown with images pandoc - o SalaryRegister . md -- extract - media =./ SalaryRegister . docx Markdown to Docx \u00b6 pandoc -- reference - doc twocolumns . docx - o UsersGuide18 . docx example122 . text HTML to Docx \u00b6 pandoc -- reference - doc pandocTheme . docx - f html - t docx - o output . docx input . html Syntax Higlight Run the following command. Use any of the available themes such as espresso , haddock , kate , monochrome , pygments , tango and zenburn pandoc -- print - highlight - style pygments > my_style . theme Make changes to the generated my_style.theme file if required. Then run the conversion command pandoc -- reference - doc = custom - reference . docx - f html - t docx - s -- highlight - style my_style . theme - o output . docx input . html HTML to Markdown \u00b6 pandoc -s -r --extract-media html pmm.html -o output.md pandoc -s -r --extract-media html input.html -o output.text HTML to ASCIIDOC \u00b6 pandoc - f html - t asciidoctor - o outpot . adoc input . html pandoc - f html - t asciidoc - o output . asc input . html ASCIIDOC to HTML \u00b6 https://rmoff.net/2020/04/16/converting-from-asciidoc-to-google-docs-and-ms-word/ asciidoctor -- backend html5 - a data - uri input . adoc ASCIIDOC to Docx \u00b6 INPUT_ADOC = my_input_file . adoc asciidoctor -- backend docbook -- out - file - $ INPUT_ADOC | \\ pandoc -- from docbook -- to docx -- output $ INPUT_ADOC . docx # On the Mac, this will open the generated file in MS Word open $ INPUT_ADOC . docx asciidoctor -- backend docbook -- out - file - $ INPUT_ADOC | \\ pandoc -- from docbook -- to docx -- output $ INPUT_ADOC . docx \\ -- highlight - style espresso asciidoctor -- backend docbook -- out - file - $ INPUT_ADOC | \\ pandoc -- from docbook -- to docx -- output $ INPUT_ADOC . docx \\ -- highlight - style my . theme ASCII to Docbook \u00b6 asciidoctor - a data - uri - a icons - b docbook wagetype_dev . adoc wkhtmltopdf \u00b6 wkhtmltopdf http : // 127.0.0.1 : 4000 / docs / CSharpCodingStandards . html google . pdf Weasyprint \u00b6 python - m weasyprint http : // weasyprint . org weasyprint . pdf","title":"Conversion"},{"location":"antora/conversion/#conversion","text":"","title":"Conversion"},{"location":"antora/conversion/#docx-to-markdown","text":"Docx to Markdown with images pandoc - o SalaryRegister . md -- extract - media =./ SalaryRegister . docx","title":"Docx to Markdown"},{"location":"antora/conversion/#markdown-to-docx","text":"pandoc -- reference - doc twocolumns . docx - o UsersGuide18 . docx example122 . text","title":"Markdown to Docx"},{"location":"antora/conversion/#html-to-docx","text":"pandoc -- reference - doc pandocTheme . docx - f html - t docx - o output . docx input . html Syntax Higlight Run the following command. Use any of the available themes such as espresso , haddock , kate , monochrome , pygments , tango and zenburn pandoc -- print - highlight - style pygments > my_style . theme Make changes to the generated my_style.theme file if required. Then run the conversion command pandoc -- reference - doc = custom - reference . docx - f html - t docx - s -- highlight - style my_style . theme - o output . docx input . html","title":"HTML to Docx"},{"location":"antora/conversion/#html-to-markdown","text":"pandoc -s -r --extract-media html pmm.html -o output.md pandoc -s -r --extract-media html input.html -o output.text","title":"HTML to Markdown"},{"location":"antora/conversion/#html-to-asciidoc","text":"pandoc - f html - t asciidoctor - o outpot . adoc input . html pandoc - f html - t asciidoc - o output . asc input . html","title":"HTML to ASCIIDOC"},{"location":"antora/conversion/#asciidoc-to-html","text":"https://rmoff.net/2020/04/16/converting-from-asciidoc-to-google-docs-and-ms-word/ asciidoctor -- backend html5 - a data - uri input . adoc","title":"ASCIIDOC to HTML"},{"location":"antora/conversion/#asciidoc-to-docx","text":"INPUT_ADOC = my_input_file . adoc asciidoctor -- backend docbook -- out - file - $ INPUT_ADOC | \\ pandoc -- from docbook -- to docx -- output $ INPUT_ADOC . docx # On the Mac, this will open the generated file in MS Word open $ INPUT_ADOC . docx asciidoctor -- backend docbook -- out - file - $ INPUT_ADOC | \\ pandoc -- from docbook -- to docx -- output $ INPUT_ADOC . docx \\ -- highlight - style espresso asciidoctor -- backend docbook -- out - file - $ INPUT_ADOC | \\ pandoc -- from docbook -- to docx -- output $ INPUT_ADOC . docx \\ -- highlight - style my . theme","title":"ASCIIDOC to Docx"},{"location":"antora/conversion/#ascii-to-docbook","text":"asciidoctor - a data - uri - a icons - b docbook wagetype_dev . adoc","title":"ASCII to Docbook"},{"location":"antora/conversion/#wkhtmltopdf","text":"wkhtmltopdf http : // 127.0.0.1 : 4000 / docs / CSharpCodingStandards . html google . pdf","title":"wkhtmltopdf"},{"location":"antora/conversion/#weasyprint","text":"python - m weasyprint http : // weasyprint . org weasyprint . pdf","title":"Weasyprint"},{"location":"mkdocs/","text":"Install \u00b6 Clone the repository \u00b6 TBD Install \u00b6 python - m pip install -- upgrade pip pip install pymdown - extensions pip install mkdocs pip install mkdocs - awesome - pages - plugin pip install mkdocs - material == 5.0.1 Serve command \u00b6 mkdocs serve Build command \u00b6 mkdocs build -- clean Publish to Github \u00b6 mkdocs gh - deploy -- force","title":"Install"},{"location":"mkdocs/#install","text":"","title":"Install"},{"location":"mkdocs/#clone-the-repository","text":"TBD","title":"Clone the repository"},{"location":"mkdocs/#install_1","text":"python - m pip install -- upgrade pip pip install pymdown - extensions pip install mkdocs pip install mkdocs - awesome - pages - plugin pip install mkdocs - material == 5.0.1","title":"Install"},{"location":"mkdocs/#serve-command","text":"mkdocs serve","title":"Serve command"},{"location":"mkdocs/#build-command","text":"mkdocs build -- clean","title":"Build command"},{"location":"mkdocs/#publish-to-github","text":"mkdocs gh - deploy -- force","title":"Publish to Github"}]}